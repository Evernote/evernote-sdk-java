/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.evernote.edam.type;

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;

import com.evernote.thrift.*;
import com.evernote.thrift.protocol.*;

/**
 *  A structure holding the optional attributes that can be stored
 *  on a User.  These are generally less critical than the core User fields.
 * 
 * <dl>
 *  <dt>defaultLocationName</dt>
 *    <dd>the location string that should be associated
 *    with the user in order to determine where notes are taken if not otherwise
 *    specified.<br/>
 *    Length:  EDAM_ATTRIBUTE_LEN_MIN - EDAM_ATTRIBUTE_LEN_MAX
 *    </dd>
 * 
 *  <dt>defaultLatitude</dt>
 *    <dd>if set, this is the latitude that should be
 *    assigned to any notes that have no other latitude information.
 *    </dd>
 * 
 *  <dt>defaultLongitude</dt>
 *    <dd>if set, this is the longitude that should be
 *    assigned to any notes that have no other longitude information.
 *    </dd>
 * 
 *  <dt>preactivation</dt>
 *    <dd>if set, the user account is not yet confirmed for
 *    login.  I.e. the account has been created, but we are still waiting for
 *    the user to complete the activation step.
 *    </dd>
 * 
 *  <dt>viewedPromotions</dt>
 *    <dd>a list of promotions the user has seen.
 *     This list may occasionally be modified by the system when promotions are
 *     no longer available.<br/>
 *     Length:  EDAM_ATTRIBUTE_LEN_MIN - EDAM_ATTRIBUTE_LEN_MAX
 *    </dd>
 * 
 *  <dt>incomingEmailAddress</dt>
 *    <dd>if set, this is the email address that the
 *     user may send email to in order to add an email note directly into the
 *     account via the SMTP email gateway.  This is the part of the email
 *     address before the '@' symbol ... our domain is not included.
 *     If this is not set, the user may not add notes via the gateway.<br/>
 *     Length:  EDAM_ATTRIBUTE_LEN_MIN - EDAM_ATTRIBUTE_LEN_MAX
 *    </dd>
 * 
 *  <dt>recentMailedAddresses</dt>
 *    <dd>if set, this will contain a list of email
 *     addresses that have recently been used as recipients
 *     of outbound emails by the user.  This can be used to pre-populate a
 *     list of possible destinations when a user wishes to send a note via
 *     email.<br/>
 *     Length:  EDAM_ATTRIBUTE_LEN_MIN - EDAM_ATTRIBUTE_LEN_MAX each<br/>
 *     Max:  EDAM_USER_RECENT_MAILED_ADDRESSES_MAX entries
 *    </dd>
 * 
 *  <dt>comments</dt>
 *    <dd>Free-form text field that may hold general support
 *     information, etc.<br/>
 *     Length:  EDAM_ATTRIBUTE_LEN_MIN - EDAM_ATTRIBUTE_LEN_MAX
 *    </dd>
 * 
 *  <dt>dateAgreedToTermsOfService</dt>
 *    <dd>The date/time when the user agreed to
 *     the terms of service.  This can be used as the effective "start date"
 *     for the account.
 *    </dd>
 * 
 *  <dt>maxReferrals</dt>
 *    <dd>The number of referrals that the user is permitted
 *     to make.
 *    </dd>
 * 
 *  <dt>referralCount</dt>
 *    <dd>The number of referrals sent from this account.
 *    </dd>
 * 
 *  <dt>refererCode</dt>
 *    <dd>A code indicating where the user was sent from. AKA
 *     promotion code
 *    </dd>
 * 
 *  <dt>sentEmailDate</dt>
 *    <dd>The most recent date when the user sent outbound
 *     emails from the service.  Used with sentEmailCount to limit the number
 *     of emails that can be sent per day.
 *    </dd>
 * 
 *  <dt>sentEmailCount</dt>
 *    <dd>The number of emails that were sent from the user
 *     via the service on sentEmailDate.  Used to enforce a limit on the number
 *     of emails per user per day to prevent spamming.
 *    </dd>
 * 
 *  <dt>dailyEmailLimit</dt>
 *    <dd>If set, this is the maximum number of emails that
 *     may be sent in a given day from this account.  If unset, the server will
 *     use the configured default limit.
 *    </dd>
 * 
 *  <dt>emailOptOutDate</dt>
 *    <dd>If set, this is the date when the user asked
 *     to be excluded from offers and promotions sent by Evernote.  If not set,
 *     then the user currently agrees to receive these messages.
 *    </dd>
 * 
 *  <dt>partnerEmailOptInDate</dt>
 *    <dd>If set, this is the date when the user asked
 *     to be included in offers and promotions sent by Evernote's partners.
 *     If not sent, then the user currently does not agree to receive these
 *     emails.
 *    </dd>
 * 
 *  <dt>preferredLanguage</dt>
 *    <dd>a 2 character language codes based on:
 *        http://ftp.ics.uci.edu/pub/ietf/http/related/iso639.txt used for
 *       localization purposes to determine what language to use for the web
 *       interface and for other direct communication (e.g. emails).
 *    </dd>
 * 
 *  <dt>preferredCountry</dt>
 *    <dd>Preferred country code based on ISO 3166-1-alpha-2 indicating the
 *    users preferred country</dd>
 * 
 *  <dt>clipFullPage</dt>
 *    <dd>Boolean flag set to true if the user wants to clip full pages by
 *    default when they use the web clipper without a selection.</dd>
 * 
 *  <dt>twitterUserName</dt>
 *    <dd>The username of the account of someone who has chosen to enable
 *    Twittering into Evernote.  This value is subject to change, since users
 *    may change their Twitter user name.</dd>
 * 
 *  <dt>twitterId</dt>
 *    <dd>The unique identifier of the user's Twitter account if that user
 *    has chosen to enable Twittering into Evernote.</dd>
 * 
 *  <dt>groupName</dt>
 *    <dd>A name identifier used to identify a particular set of branding and
 *     light customization.</dd>
 * 
 *  <dt>recognitionLanguage</dt>
 *    <dd>a 2 character language codes based on:
 *        http://ftp.ics.uci.edu/pub/ietf/http/related/iso639.txt
 *        If set, this is used to determine the language that should be used
 *        when processing images and PDF files to find text.
 *        If not set, then the 'preferredLanguage' will be used.
 *    </dd>
 * 
 *  <dt>educationalInstitution</dt>
 *    <dd>a flag indicating that the user is part of an educational institution which
 *    makes them eligible for discounts on bulk purchases
 *    </dd>
 * 
 *  <dt>businessAddress</dt>
 *    <dd>A string recording the business address of a Sponsored Account user who has requested invoicing.
 *    </dd>
 * 
 *  <dt>hideSponsorBilling</dt>
 *    <dd>A flag indicating whether to hide the billing information on a sponsored
 *        account owner's settings page
 *    </dd>
 * 
 *  <dt>taxExempt</dt>
 *    <dd>A flag indicating the user's sponsored group is exempt from sale tax
 *    </dd>
 * 
 *  <dt>useEmailAutoFiling</dt>
 *    <dd>A flag indicating whether the user chooses to allow Evernote to automatically
 *        file and tag emailed notes
 *    </dd>
 * 
 *  <dt>reminderEmailConfig</dt>
 *    <dd>Configuration state for whether or not the user wishes to receive
 *        reminder e-mail.  This setting applies to both the reminder e-mail sent
 *        for personal reminder notes and for the reminder e-mail sent for reminder
 *        notes in the user's business notebooks that the user has configured for
 *        e-mail notifications.
 *    </dd>
 *  </dl>
 */
public class UserAttributes implements TBase<UserAttributes>, java.io.Serializable, Cloneable {
  private static final TStruct STRUCT_DESC = new TStruct("UserAttributes");

  private static final TField DEFAULT_LOCATION_NAME_FIELD_DESC = new TField("defaultLocationName", TType.STRING, (short)1);
  private static final TField DEFAULT_LATITUDE_FIELD_DESC = new TField("defaultLatitude", TType.DOUBLE, (short)2);
  private static final TField DEFAULT_LONGITUDE_FIELD_DESC = new TField("defaultLongitude", TType.DOUBLE, (short)3);
  private static final TField PREACTIVATION_FIELD_DESC = new TField("preactivation", TType.BOOL, (short)4);
  private static final TField VIEWED_PROMOTIONS_FIELD_DESC = new TField("viewedPromotions", TType.LIST, (short)5);
  private static final TField INCOMING_EMAIL_ADDRESS_FIELD_DESC = new TField("incomingEmailAddress", TType.STRING, (short)6);
  private static final TField RECENT_MAILED_ADDRESSES_FIELD_DESC = new TField("recentMailedAddresses", TType.LIST, (short)7);
  private static final TField COMMENTS_FIELD_DESC = new TField("comments", TType.STRING, (short)9);
  private static final TField DATE_AGREED_TO_TERMS_OF_SERVICE_FIELD_DESC = new TField("dateAgreedToTermsOfService", TType.I64, (short)11);
  private static final TField MAX_REFERRALS_FIELD_DESC = new TField("maxReferrals", TType.I32, (short)12);
  private static final TField REFERRAL_COUNT_FIELD_DESC = new TField("referralCount", TType.I32, (short)13);
  private static final TField REFERER_CODE_FIELD_DESC = new TField("refererCode", TType.STRING, (short)14);
  private static final TField SENT_EMAIL_DATE_FIELD_DESC = new TField("sentEmailDate", TType.I64, (short)15);
  private static final TField SENT_EMAIL_COUNT_FIELD_DESC = new TField("sentEmailCount", TType.I32, (short)16);
  private static final TField DAILY_EMAIL_LIMIT_FIELD_DESC = new TField("dailyEmailLimit", TType.I32, (short)17);
  private static final TField EMAIL_OPT_OUT_DATE_FIELD_DESC = new TField("emailOptOutDate", TType.I64, (short)18);
  private static final TField PARTNER_EMAIL_OPT_IN_DATE_FIELD_DESC = new TField("partnerEmailOptInDate", TType.I64, (short)19);
  private static final TField PREFERRED_LANGUAGE_FIELD_DESC = new TField("preferredLanguage", TType.STRING, (short)20);
  private static final TField PREFERRED_COUNTRY_FIELD_DESC = new TField("preferredCountry", TType.STRING, (short)21);
  private static final TField CLIP_FULL_PAGE_FIELD_DESC = new TField("clipFullPage", TType.BOOL, (short)22);
  private static final TField TWITTER_USER_NAME_FIELD_DESC = new TField("twitterUserName", TType.STRING, (short)23);
  private static final TField TWITTER_ID_FIELD_DESC = new TField("twitterId", TType.STRING, (short)24);
  private static final TField GROUP_NAME_FIELD_DESC = new TField("groupName", TType.STRING, (short)25);
  private static final TField RECOGNITION_LANGUAGE_FIELD_DESC = new TField("recognitionLanguage", TType.STRING, (short)26);
  private static final TField REFERRAL_PROOF_FIELD_DESC = new TField("referralProof", TType.STRING, (short)28);
  private static final TField EDUCATIONAL_DISCOUNT_FIELD_DESC = new TField("educationalDiscount", TType.BOOL, (short)29);
  private static final TField BUSINESS_ADDRESS_FIELD_DESC = new TField("businessAddress", TType.STRING, (short)30);
  private static final TField HIDE_SPONSOR_BILLING_FIELD_DESC = new TField("hideSponsorBilling", TType.BOOL, (short)31);
  private static final TField TAX_EXEMPT_FIELD_DESC = new TField("taxExempt", TType.BOOL, (short)32);
  private static final TField USE_EMAIL_AUTO_FILING_FIELD_DESC = new TField("useEmailAutoFiling", TType.BOOL, (short)33);
  private static final TField REMINDER_EMAIL_CONFIG_FIELD_DESC = new TField("reminderEmailConfig", TType.I32, (short)34);

  private String defaultLocationName;
  private double defaultLatitude;
  private double defaultLongitude;
  private boolean preactivation;
  private List<String> viewedPromotions;
  private String incomingEmailAddress;
  private List<String> recentMailedAddresses;
  private String comments;
  private long dateAgreedToTermsOfService;
  private int maxReferrals;
  private int referralCount;
  private String refererCode;
  private long sentEmailDate;
  private int sentEmailCount;
  private int dailyEmailLimit;
  private long emailOptOutDate;
  private long partnerEmailOptInDate;
  private String preferredLanguage;
  private String preferredCountry;
  private boolean clipFullPage;
  private String twitterUserName;
  private String twitterId;
  private String groupName;
  private String recognitionLanguage;
  private String referralProof;
  private boolean educationalDiscount;
  private String businessAddress;
  private boolean hideSponsorBilling;
  private boolean taxExempt;
  private boolean useEmailAutoFiling;
  private ReminderEmailConfig reminderEmailConfig;


  // isset id assignments
  private static final int __DEFAULTLATITUDE_ISSET_ID = 0;
  private static final int __DEFAULTLONGITUDE_ISSET_ID = 1;
  private static final int __PREACTIVATION_ISSET_ID = 2;
  private static final int __DATEAGREEDTOTERMSOFSERVICE_ISSET_ID = 3;
  private static final int __MAXREFERRALS_ISSET_ID = 4;
  private static final int __REFERRALCOUNT_ISSET_ID = 5;
  private static final int __SENTEMAILDATE_ISSET_ID = 6;
  private static final int __SENTEMAILCOUNT_ISSET_ID = 7;
  private static final int __DAILYEMAILLIMIT_ISSET_ID = 8;
  private static final int __EMAILOPTOUTDATE_ISSET_ID = 9;
  private static final int __PARTNEREMAILOPTINDATE_ISSET_ID = 10;
  private static final int __CLIPFULLPAGE_ISSET_ID = 11;
  private static final int __EDUCATIONALDISCOUNT_ISSET_ID = 12;
  private static final int __HIDESPONSORBILLING_ISSET_ID = 13;
  private static final int __TAXEXEMPT_ISSET_ID = 14;
  private static final int __USEEMAILAUTOFILING_ISSET_ID = 15;
  private boolean[] __isset_vector = new boolean[16];

  public UserAttributes() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public UserAttributes(UserAttributes other) {
    System.arraycopy(other.__isset_vector, 0, __isset_vector, 0, other.__isset_vector.length);
    if (other.isSetDefaultLocationName()) {
      this.defaultLocationName = other.defaultLocationName;
    }
    this.defaultLatitude = other.defaultLatitude;
    this.defaultLongitude = other.defaultLongitude;
    this.preactivation = other.preactivation;
    if (other.isSetViewedPromotions()) {
      List<String> __this__viewedPromotions = new ArrayList<String>();
      for (String other_element : other.viewedPromotions) {
        __this__viewedPromotions.add(other_element);
      }
      this.viewedPromotions = __this__viewedPromotions;
    }
    if (other.isSetIncomingEmailAddress()) {
      this.incomingEmailAddress = other.incomingEmailAddress;
    }
    if (other.isSetRecentMailedAddresses()) {
      List<String> __this__recentMailedAddresses = new ArrayList<String>();
      for (String other_element : other.recentMailedAddresses) {
        __this__recentMailedAddresses.add(other_element);
      }
      this.recentMailedAddresses = __this__recentMailedAddresses;
    }
    if (other.isSetComments()) {
      this.comments = other.comments;
    }
    this.dateAgreedToTermsOfService = other.dateAgreedToTermsOfService;
    this.maxReferrals = other.maxReferrals;
    this.referralCount = other.referralCount;
    if (other.isSetRefererCode()) {
      this.refererCode = other.refererCode;
    }
    this.sentEmailDate = other.sentEmailDate;
    this.sentEmailCount = other.sentEmailCount;
    this.dailyEmailLimit = other.dailyEmailLimit;
    this.emailOptOutDate = other.emailOptOutDate;
    this.partnerEmailOptInDate = other.partnerEmailOptInDate;
    if (other.isSetPreferredLanguage()) {
      this.preferredLanguage = other.preferredLanguage;
    }
    if (other.isSetPreferredCountry()) {
      this.preferredCountry = other.preferredCountry;
    }
    this.clipFullPage = other.clipFullPage;
    if (other.isSetTwitterUserName()) {
      this.twitterUserName = other.twitterUserName;
    }
    if (other.isSetTwitterId()) {
      this.twitterId = other.twitterId;
    }
    if (other.isSetGroupName()) {
      this.groupName = other.groupName;
    }
    if (other.isSetRecognitionLanguage()) {
      this.recognitionLanguage = other.recognitionLanguage;
    }
    if (other.isSetReferralProof()) {
      this.referralProof = other.referralProof;
    }
    this.educationalDiscount = other.educationalDiscount;
    if (other.isSetBusinessAddress()) {
      this.businessAddress = other.businessAddress;
    }
    this.hideSponsorBilling = other.hideSponsorBilling;
    this.taxExempt = other.taxExempt;
    this.useEmailAutoFiling = other.useEmailAutoFiling;
    if (other.isSetReminderEmailConfig()) {
      this.reminderEmailConfig = other.reminderEmailConfig;
    }
  }

  public UserAttributes deepCopy() {
    return new UserAttributes(this);
  }

  public void clear() {
    this.defaultLocationName = null;
    setDefaultLatitudeIsSet(false);
    this.defaultLatitude = 0.0;
    setDefaultLongitudeIsSet(false);
    this.defaultLongitude = 0.0;
    setPreactivationIsSet(false);
    this.preactivation = false;
    this.viewedPromotions = null;
    this.incomingEmailAddress = null;
    this.recentMailedAddresses = null;
    this.comments = null;
    setDateAgreedToTermsOfServiceIsSet(false);
    this.dateAgreedToTermsOfService = 0;
    setMaxReferralsIsSet(false);
    this.maxReferrals = 0;
    setReferralCountIsSet(false);
    this.referralCount = 0;
    this.refererCode = null;
    setSentEmailDateIsSet(false);
    this.sentEmailDate = 0;
    setSentEmailCountIsSet(false);
    this.sentEmailCount = 0;
    setDailyEmailLimitIsSet(false);
    this.dailyEmailLimit = 0;
    setEmailOptOutDateIsSet(false);
    this.emailOptOutDate = 0;
    setPartnerEmailOptInDateIsSet(false);
    this.partnerEmailOptInDate = 0;
    this.preferredLanguage = null;
    this.preferredCountry = null;
    setClipFullPageIsSet(false);
    this.clipFullPage = false;
    this.twitterUserName = null;
    this.twitterId = null;
    this.groupName = null;
    this.recognitionLanguage = null;
    this.referralProof = null;
    setEducationalDiscountIsSet(false);
    this.educationalDiscount = false;
    this.businessAddress = null;
    setHideSponsorBillingIsSet(false);
    this.hideSponsorBilling = false;
    setTaxExemptIsSet(false);
    this.taxExempt = false;
    setUseEmailAutoFilingIsSet(false);
    this.useEmailAutoFiling = false;
    this.reminderEmailConfig = null;
  }

  public String getDefaultLocationName() {
    return this.defaultLocationName;
  }

  public void setDefaultLocationName(String defaultLocationName) {
    this.defaultLocationName = defaultLocationName;
  }

  public void unsetDefaultLocationName() {
    this.defaultLocationName = null;
  }

  /** Returns true if field defaultLocationName is set (has been asigned a value) and false otherwise */
  public boolean isSetDefaultLocationName() {
    return this.defaultLocationName != null;
  }

  public void setDefaultLocationNameIsSet(boolean value) {
    if (!value) {
      this.defaultLocationName = null;
    }
  }

  public double getDefaultLatitude() {
    return this.defaultLatitude;
  }

  public void setDefaultLatitude(double defaultLatitude) {
    this.defaultLatitude = defaultLatitude;
    setDefaultLatitudeIsSet(true);
  }

  public void unsetDefaultLatitude() {
    __isset_vector[__DEFAULTLATITUDE_ISSET_ID] = false;
  }

  /** Returns true if field defaultLatitude is set (has been asigned a value) and false otherwise */
  public boolean isSetDefaultLatitude() {
    return __isset_vector[__DEFAULTLATITUDE_ISSET_ID];
  }

  public void setDefaultLatitudeIsSet(boolean value) {
    __isset_vector[__DEFAULTLATITUDE_ISSET_ID] = value;
  }

  public double getDefaultLongitude() {
    return this.defaultLongitude;
  }

  public void setDefaultLongitude(double defaultLongitude) {
    this.defaultLongitude = defaultLongitude;
    setDefaultLongitudeIsSet(true);
  }

  public void unsetDefaultLongitude() {
    __isset_vector[__DEFAULTLONGITUDE_ISSET_ID] = false;
  }

  /** Returns true if field defaultLongitude is set (has been asigned a value) and false otherwise */
  public boolean isSetDefaultLongitude() {
    return __isset_vector[__DEFAULTLONGITUDE_ISSET_ID];
  }

  public void setDefaultLongitudeIsSet(boolean value) {
    __isset_vector[__DEFAULTLONGITUDE_ISSET_ID] = value;
  }

  public boolean isPreactivation() {
    return this.preactivation;
  }

  public void setPreactivation(boolean preactivation) {
    this.preactivation = preactivation;
    setPreactivationIsSet(true);
  }

  public void unsetPreactivation() {
    __isset_vector[__PREACTIVATION_ISSET_ID] = false;
  }

  /** Returns true if field preactivation is set (has been asigned a value) and false otherwise */
  public boolean isSetPreactivation() {
    return __isset_vector[__PREACTIVATION_ISSET_ID];
  }

  public void setPreactivationIsSet(boolean value) {
    __isset_vector[__PREACTIVATION_ISSET_ID] = value;
  }

  public int getViewedPromotionsSize() {
    return (this.viewedPromotions == null) ? 0 : this.viewedPromotions.size();
  }

  public java.util.Iterator<String> getViewedPromotionsIterator() {
    return (this.viewedPromotions == null) ? null : this.viewedPromotions.iterator();
  }

  public void addToViewedPromotions(String elem) {
    if (this.viewedPromotions == null) {
      this.viewedPromotions = new ArrayList<String>();
    }
    this.viewedPromotions.add(elem);
  }

  public List<String> getViewedPromotions() {
    return this.viewedPromotions;
  }

  public void setViewedPromotions(List<String> viewedPromotions) {
    this.viewedPromotions = viewedPromotions;
  }

  public void unsetViewedPromotions() {
    this.viewedPromotions = null;
  }

  /** Returns true if field viewedPromotions is set (has been asigned a value) and false otherwise */
  public boolean isSetViewedPromotions() {
    return this.viewedPromotions != null;
  }

  public void setViewedPromotionsIsSet(boolean value) {
    if (!value) {
      this.viewedPromotions = null;
    }
  }

  public String getIncomingEmailAddress() {
    return this.incomingEmailAddress;
  }

  public void setIncomingEmailAddress(String incomingEmailAddress) {
    this.incomingEmailAddress = incomingEmailAddress;
  }

  public void unsetIncomingEmailAddress() {
    this.incomingEmailAddress = null;
  }

  /** Returns true if field incomingEmailAddress is set (has been asigned a value) and false otherwise */
  public boolean isSetIncomingEmailAddress() {
    return this.incomingEmailAddress != null;
  }

  public void setIncomingEmailAddressIsSet(boolean value) {
    if (!value) {
      this.incomingEmailAddress = null;
    }
  }

  public int getRecentMailedAddressesSize() {
    return (this.recentMailedAddresses == null) ? 0 : this.recentMailedAddresses.size();
  }

  public java.util.Iterator<String> getRecentMailedAddressesIterator() {
    return (this.recentMailedAddresses == null) ? null : this.recentMailedAddresses.iterator();
  }

  public void addToRecentMailedAddresses(String elem) {
    if (this.recentMailedAddresses == null) {
      this.recentMailedAddresses = new ArrayList<String>();
    }
    this.recentMailedAddresses.add(elem);
  }

  public List<String> getRecentMailedAddresses() {
    return this.recentMailedAddresses;
  }

  public void setRecentMailedAddresses(List<String> recentMailedAddresses) {
    this.recentMailedAddresses = recentMailedAddresses;
  }

  public void unsetRecentMailedAddresses() {
    this.recentMailedAddresses = null;
  }

  /** Returns true if field recentMailedAddresses is set (has been asigned a value) and false otherwise */
  public boolean isSetRecentMailedAddresses() {
    return this.recentMailedAddresses != null;
  }

  public void setRecentMailedAddressesIsSet(boolean value) {
    if (!value) {
      this.recentMailedAddresses = null;
    }
  }

  public String getComments() {
    return this.comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }

  public void unsetComments() {
    this.comments = null;
  }

  /** Returns true if field comments is set (has been asigned a value) and false otherwise */
  public boolean isSetComments() {
    return this.comments != null;
  }

  public void setCommentsIsSet(boolean value) {
    if (!value) {
      this.comments = null;
    }
  }

  public long getDateAgreedToTermsOfService() {
    return this.dateAgreedToTermsOfService;
  }

  public void setDateAgreedToTermsOfService(long dateAgreedToTermsOfService) {
    this.dateAgreedToTermsOfService = dateAgreedToTermsOfService;
    setDateAgreedToTermsOfServiceIsSet(true);
  }

  public void unsetDateAgreedToTermsOfService() {
    __isset_vector[__DATEAGREEDTOTERMSOFSERVICE_ISSET_ID] = false;
  }

  /** Returns true if field dateAgreedToTermsOfService is set (has been asigned a value) and false otherwise */
  public boolean isSetDateAgreedToTermsOfService() {
    return __isset_vector[__DATEAGREEDTOTERMSOFSERVICE_ISSET_ID];
  }

  public void setDateAgreedToTermsOfServiceIsSet(boolean value) {
    __isset_vector[__DATEAGREEDTOTERMSOFSERVICE_ISSET_ID] = value;
  }

  public int getMaxReferrals() {
    return this.maxReferrals;
  }

  public void setMaxReferrals(int maxReferrals) {
    this.maxReferrals = maxReferrals;
    setMaxReferralsIsSet(true);
  }

  public void unsetMaxReferrals() {
    __isset_vector[__MAXREFERRALS_ISSET_ID] = false;
  }

  /** Returns true if field maxReferrals is set (has been asigned a value) and false otherwise */
  public boolean isSetMaxReferrals() {
    return __isset_vector[__MAXREFERRALS_ISSET_ID];
  }

  public void setMaxReferralsIsSet(boolean value) {
    __isset_vector[__MAXREFERRALS_ISSET_ID] = value;
  }

  public int getReferralCount() {
    return this.referralCount;
  }

  public void setReferralCount(int referralCount) {
    this.referralCount = referralCount;
    setReferralCountIsSet(true);
  }

  public void unsetReferralCount() {
    __isset_vector[__REFERRALCOUNT_ISSET_ID] = false;
  }

  /** Returns true if field referralCount is set (has been asigned a value) and false otherwise */
  public boolean isSetReferralCount() {
    return __isset_vector[__REFERRALCOUNT_ISSET_ID];
  }

  public void setReferralCountIsSet(boolean value) {
    __isset_vector[__REFERRALCOUNT_ISSET_ID] = value;
  }

  public String getRefererCode() {
    return this.refererCode;
  }

  public void setRefererCode(String refererCode) {
    this.refererCode = refererCode;
  }

  public void unsetRefererCode() {
    this.refererCode = null;
  }

  /** Returns true if field refererCode is set (has been asigned a value) and false otherwise */
  public boolean isSetRefererCode() {
    return this.refererCode != null;
  }

  public void setRefererCodeIsSet(boolean value) {
    if (!value) {
      this.refererCode = null;
    }
  }

  public long getSentEmailDate() {
    return this.sentEmailDate;
  }

  public void setSentEmailDate(long sentEmailDate) {
    this.sentEmailDate = sentEmailDate;
    setSentEmailDateIsSet(true);
  }

  public void unsetSentEmailDate() {
    __isset_vector[__SENTEMAILDATE_ISSET_ID] = false;
  }

  /** Returns true if field sentEmailDate is set (has been asigned a value) and false otherwise */
  public boolean isSetSentEmailDate() {
    return __isset_vector[__SENTEMAILDATE_ISSET_ID];
  }

  public void setSentEmailDateIsSet(boolean value) {
    __isset_vector[__SENTEMAILDATE_ISSET_ID] = value;
  }

  public int getSentEmailCount() {
    return this.sentEmailCount;
  }

  public void setSentEmailCount(int sentEmailCount) {
    this.sentEmailCount = sentEmailCount;
    setSentEmailCountIsSet(true);
  }

  public void unsetSentEmailCount() {
    __isset_vector[__SENTEMAILCOUNT_ISSET_ID] = false;
  }

  /** Returns true if field sentEmailCount is set (has been asigned a value) and false otherwise */
  public boolean isSetSentEmailCount() {
    return __isset_vector[__SENTEMAILCOUNT_ISSET_ID];
  }

  public void setSentEmailCountIsSet(boolean value) {
    __isset_vector[__SENTEMAILCOUNT_ISSET_ID] = value;
  }

  public int getDailyEmailLimit() {
    return this.dailyEmailLimit;
  }

  public void setDailyEmailLimit(int dailyEmailLimit) {
    this.dailyEmailLimit = dailyEmailLimit;
    setDailyEmailLimitIsSet(true);
  }

  public void unsetDailyEmailLimit() {
    __isset_vector[__DAILYEMAILLIMIT_ISSET_ID] = false;
  }

  /** Returns true if field dailyEmailLimit is set (has been asigned a value) and false otherwise */
  public boolean isSetDailyEmailLimit() {
    return __isset_vector[__DAILYEMAILLIMIT_ISSET_ID];
  }

  public void setDailyEmailLimitIsSet(boolean value) {
    __isset_vector[__DAILYEMAILLIMIT_ISSET_ID] = value;
  }

  public long getEmailOptOutDate() {
    return this.emailOptOutDate;
  }

  public void setEmailOptOutDate(long emailOptOutDate) {
    this.emailOptOutDate = emailOptOutDate;
    setEmailOptOutDateIsSet(true);
  }

  public void unsetEmailOptOutDate() {
    __isset_vector[__EMAILOPTOUTDATE_ISSET_ID] = false;
  }

  /** Returns true if field emailOptOutDate is set (has been asigned a value) and false otherwise */
  public boolean isSetEmailOptOutDate() {
    return __isset_vector[__EMAILOPTOUTDATE_ISSET_ID];
  }

  public void setEmailOptOutDateIsSet(boolean value) {
    __isset_vector[__EMAILOPTOUTDATE_ISSET_ID] = value;
  }

  public long getPartnerEmailOptInDate() {
    return this.partnerEmailOptInDate;
  }

  public void setPartnerEmailOptInDate(long partnerEmailOptInDate) {
    this.partnerEmailOptInDate = partnerEmailOptInDate;
    setPartnerEmailOptInDateIsSet(true);
  }

  public void unsetPartnerEmailOptInDate() {
    __isset_vector[__PARTNEREMAILOPTINDATE_ISSET_ID] = false;
  }

  /** Returns true if field partnerEmailOptInDate is set (has been asigned a value) and false otherwise */
  public boolean isSetPartnerEmailOptInDate() {
    return __isset_vector[__PARTNEREMAILOPTINDATE_ISSET_ID];
  }

  public void setPartnerEmailOptInDateIsSet(boolean value) {
    __isset_vector[__PARTNEREMAILOPTINDATE_ISSET_ID] = value;
  }

  public String getPreferredLanguage() {
    return this.preferredLanguage;
  }

  public void setPreferredLanguage(String preferredLanguage) {
    this.preferredLanguage = preferredLanguage;
  }

  public void unsetPreferredLanguage() {
    this.preferredLanguage = null;
  }

  /** Returns true if field preferredLanguage is set (has been asigned a value) and false otherwise */
  public boolean isSetPreferredLanguage() {
    return this.preferredLanguage != null;
  }

  public void setPreferredLanguageIsSet(boolean value) {
    if (!value) {
      this.preferredLanguage = null;
    }
  }

  public String getPreferredCountry() {
    return this.preferredCountry;
  }

  public void setPreferredCountry(String preferredCountry) {
    this.preferredCountry = preferredCountry;
  }

  public void unsetPreferredCountry() {
    this.preferredCountry = null;
  }

  /** Returns true if field preferredCountry is set (has been asigned a value) and false otherwise */
  public boolean isSetPreferredCountry() {
    return this.preferredCountry != null;
  }

  public void setPreferredCountryIsSet(boolean value) {
    if (!value) {
      this.preferredCountry = null;
    }
  }

  public boolean isClipFullPage() {
    return this.clipFullPage;
  }

  public void setClipFullPage(boolean clipFullPage) {
    this.clipFullPage = clipFullPage;
    setClipFullPageIsSet(true);
  }

  public void unsetClipFullPage() {
    __isset_vector[__CLIPFULLPAGE_ISSET_ID] = false;
  }

  /** Returns true if field clipFullPage is set (has been asigned a value) and false otherwise */
  public boolean isSetClipFullPage() {
    return __isset_vector[__CLIPFULLPAGE_ISSET_ID];
  }

  public void setClipFullPageIsSet(boolean value) {
    __isset_vector[__CLIPFULLPAGE_ISSET_ID] = value;
  }

  public String getTwitterUserName() {
    return this.twitterUserName;
  }

  public void setTwitterUserName(String twitterUserName) {
    this.twitterUserName = twitterUserName;
  }

  public void unsetTwitterUserName() {
    this.twitterUserName = null;
  }

  /** Returns true if field twitterUserName is set (has been asigned a value) and false otherwise */
  public boolean isSetTwitterUserName() {
    return this.twitterUserName != null;
  }

  public void setTwitterUserNameIsSet(boolean value) {
    if (!value) {
      this.twitterUserName = null;
    }
  }

  public String getTwitterId() {
    return this.twitterId;
  }

  public void setTwitterId(String twitterId) {
    this.twitterId = twitterId;
  }

  public void unsetTwitterId() {
    this.twitterId = null;
  }

  /** Returns true if field twitterId is set (has been asigned a value) and false otherwise */
  public boolean isSetTwitterId() {
    return this.twitterId != null;
  }

  public void setTwitterIdIsSet(boolean value) {
    if (!value) {
      this.twitterId = null;
    }
  }

  public String getGroupName() {
    return this.groupName;
  }

  public void setGroupName(String groupName) {
    this.groupName = groupName;
  }

  public void unsetGroupName() {
    this.groupName = null;
  }

  /** Returns true if field groupName is set (has been asigned a value) and false otherwise */
  public boolean isSetGroupName() {
    return this.groupName != null;
  }

  public void setGroupNameIsSet(boolean value) {
    if (!value) {
      this.groupName = null;
    }
  }

  public String getRecognitionLanguage() {
    return this.recognitionLanguage;
  }

  public void setRecognitionLanguage(String recognitionLanguage) {
    this.recognitionLanguage = recognitionLanguage;
  }

  public void unsetRecognitionLanguage() {
    this.recognitionLanguage = null;
  }

  /** Returns true if field recognitionLanguage is set (has been asigned a value) and false otherwise */
  public boolean isSetRecognitionLanguage() {
    return this.recognitionLanguage != null;
  }

  public void setRecognitionLanguageIsSet(boolean value) {
    if (!value) {
      this.recognitionLanguage = null;
    }
  }

  public String getReferralProof() {
    return this.referralProof;
  }

  public void setReferralProof(String referralProof) {
    this.referralProof = referralProof;
  }

  public void unsetReferralProof() {
    this.referralProof = null;
  }

  /** Returns true if field referralProof is set (has been asigned a value) and false otherwise */
  public boolean isSetReferralProof() {
    return this.referralProof != null;
  }

  public void setReferralProofIsSet(boolean value) {
    if (!value) {
      this.referralProof = null;
    }
  }

  public boolean isEducationalDiscount() {
    return this.educationalDiscount;
  }

  public void setEducationalDiscount(boolean educationalDiscount) {
    this.educationalDiscount = educationalDiscount;
    setEducationalDiscountIsSet(true);
  }

  public void unsetEducationalDiscount() {
    __isset_vector[__EDUCATIONALDISCOUNT_ISSET_ID] = false;
  }

  /** Returns true if field educationalDiscount is set (has been asigned a value) and false otherwise */
  public boolean isSetEducationalDiscount() {
    return __isset_vector[__EDUCATIONALDISCOUNT_ISSET_ID];
  }

  public void setEducationalDiscountIsSet(boolean value) {
    __isset_vector[__EDUCATIONALDISCOUNT_ISSET_ID] = value;
  }

  public String getBusinessAddress() {
    return this.businessAddress;
  }

  public void setBusinessAddress(String businessAddress) {
    this.businessAddress = businessAddress;
  }

  public void unsetBusinessAddress() {
    this.businessAddress = null;
  }

  /** Returns true if field businessAddress is set (has been asigned a value) and false otherwise */
  public boolean isSetBusinessAddress() {
    return this.businessAddress != null;
  }

  public void setBusinessAddressIsSet(boolean value) {
    if (!value) {
      this.businessAddress = null;
    }
  }

  public boolean isHideSponsorBilling() {
    return this.hideSponsorBilling;
  }

  public void setHideSponsorBilling(boolean hideSponsorBilling) {
    this.hideSponsorBilling = hideSponsorBilling;
    setHideSponsorBillingIsSet(true);
  }

  public void unsetHideSponsorBilling() {
    __isset_vector[__HIDESPONSORBILLING_ISSET_ID] = false;
  }

  /** Returns true if field hideSponsorBilling is set (has been asigned a value) and false otherwise */
  public boolean isSetHideSponsorBilling() {
    return __isset_vector[__HIDESPONSORBILLING_ISSET_ID];
  }

  public void setHideSponsorBillingIsSet(boolean value) {
    __isset_vector[__HIDESPONSORBILLING_ISSET_ID] = value;
  }

  public boolean isTaxExempt() {
    return this.taxExempt;
  }

  public void setTaxExempt(boolean taxExempt) {
    this.taxExempt = taxExempt;
    setTaxExemptIsSet(true);
  }

  public void unsetTaxExempt() {
    __isset_vector[__TAXEXEMPT_ISSET_ID] = false;
  }

  /** Returns true if field taxExempt is set (has been asigned a value) and false otherwise */
  public boolean isSetTaxExempt() {
    return __isset_vector[__TAXEXEMPT_ISSET_ID];
  }

  public void setTaxExemptIsSet(boolean value) {
    __isset_vector[__TAXEXEMPT_ISSET_ID] = value;
  }

  public boolean isUseEmailAutoFiling() {
    return this.useEmailAutoFiling;
  }

  public void setUseEmailAutoFiling(boolean useEmailAutoFiling) {
    this.useEmailAutoFiling = useEmailAutoFiling;
    setUseEmailAutoFilingIsSet(true);
  }

  public void unsetUseEmailAutoFiling() {
    __isset_vector[__USEEMAILAUTOFILING_ISSET_ID] = false;
  }

  /** Returns true if field useEmailAutoFiling is set (has been asigned a value) and false otherwise */
  public boolean isSetUseEmailAutoFiling() {
    return __isset_vector[__USEEMAILAUTOFILING_ISSET_ID];
  }

  public void setUseEmailAutoFilingIsSet(boolean value) {
    __isset_vector[__USEEMAILAUTOFILING_ISSET_ID] = value;
  }

  /**
   * 
   * @see ReminderEmailConfig
   */
  public ReminderEmailConfig getReminderEmailConfig() {
    return this.reminderEmailConfig;
  }

  /**
   * 
   * @see ReminderEmailConfig
   */
  public void setReminderEmailConfig(ReminderEmailConfig reminderEmailConfig) {
    this.reminderEmailConfig = reminderEmailConfig;
  }

  public void unsetReminderEmailConfig() {
    this.reminderEmailConfig = null;
  }

  /** Returns true if field reminderEmailConfig is set (has been asigned a value) and false otherwise */
  public boolean isSetReminderEmailConfig() {
    return this.reminderEmailConfig != null;
  }

  public void setReminderEmailConfigIsSet(boolean value) {
    if (!value) {
      this.reminderEmailConfig = null;
    }
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof UserAttributes)
      return this.equals((UserAttributes)that);
    return false;
  }

  public boolean equals(UserAttributes that) {
    if (that == null)
      return false;

    boolean this_present_defaultLocationName = true && this.isSetDefaultLocationName();
    boolean that_present_defaultLocationName = true && that.isSetDefaultLocationName();
    if (this_present_defaultLocationName || that_present_defaultLocationName) {
      if (!(this_present_defaultLocationName && that_present_defaultLocationName))
        return false;
      if (!this.defaultLocationName.equals(that.defaultLocationName))
        return false;
    }

    boolean this_present_defaultLatitude = true && this.isSetDefaultLatitude();
    boolean that_present_defaultLatitude = true && that.isSetDefaultLatitude();
    if (this_present_defaultLatitude || that_present_defaultLatitude) {
      if (!(this_present_defaultLatitude && that_present_defaultLatitude))
        return false;
      if (this.defaultLatitude != that.defaultLatitude)
        return false;
    }

    boolean this_present_defaultLongitude = true && this.isSetDefaultLongitude();
    boolean that_present_defaultLongitude = true && that.isSetDefaultLongitude();
    if (this_present_defaultLongitude || that_present_defaultLongitude) {
      if (!(this_present_defaultLongitude && that_present_defaultLongitude))
        return false;
      if (this.defaultLongitude != that.defaultLongitude)
        return false;
    }

    boolean this_present_preactivation = true && this.isSetPreactivation();
    boolean that_present_preactivation = true && that.isSetPreactivation();
    if (this_present_preactivation || that_present_preactivation) {
      if (!(this_present_preactivation && that_present_preactivation))
        return false;
      if (this.preactivation != that.preactivation)
        return false;
    }

    boolean this_present_viewedPromotions = true && this.isSetViewedPromotions();
    boolean that_present_viewedPromotions = true && that.isSetViewedPromotions();
    if (this_present_viewedPromotions || that_present_viewedPromotions) {
      if (!(this_present_viewedPromotions && that_present_viewedPromotions))
        return false;
      if (!this.viewedPromotions.equals(that.viewedPromotions))
        return false;
    }

    boolean this_present_incomingEmailAddress = true && this.isSetIncomingEmailAddress();
    boolean that_present_incomingEmailAddress = true && that.isSetIncomingEmailAddress();
    if (this_present_incomingEmailAddress || that_present_incomingEmailAddress) {
      if (!(this_present_incomingEmailAddress && that_present_incomingEmailAddress))
        return false;
      if (!this.incomingEmailAddress.equals(that.incomingEmailAddress))
        return false;
    }

    boolean this_present_recentMailedAddresses = true && this.isSetRecentMailedAddresses();
    boolean that_present_recentMailedAddresses = true && that.isSetRecentMailedAddresses();
    if (this_present_recentMailedAddresses || that_present_recentMailedAddresses) {
      if (!(this_present_recentMailedAddresses && that_present_recentMailedAddresses))
        return false;
      if (!this.recentMailedAddresses.equals(that.recentMailedAddresses))
        return false;
    }

    boolean this_present_comments = true && this.isSetComments();
    boolean that_present_comments = true && that.isSetComments();
    if (this_present_comments || that_present_comments) {
      if (!(this_present_comments && that_present_comments))
        return false;
      if (!this.comments.equals(that.comments))
        return false;
    }

    boolean this_present_dateAgreedToTermsOfService = true && this.isSetDateAgreedToTermsOfService();
    boolean that_present_dateAgreedToTermsOfService = true && that.isSetDateAgreedToTermsOfService();
    if (this_present_dateAgreedToTermsOfService || that_present_dateAgreedToTermsOfService) {
      if (!(this_present_dateAgreedToTermsOfService && that_present_dateAgreedToTermsOfService))
        return false;
      if (this.dateAgreedToTermsOfService != that.dateAgreedToTermsOfService)
        return false;
    }

    boolean this_present_maxReferrals = true && this.isSetMaxReferrals();
    boolean that_present_maxReferrals = true && that.isSetMaxReferrals();
    if (this_present_maxReferrals || that_present_maxReferrals) {
      if (!(this_present_maxReferrals && that_present_maxReferrals))
        return false;
      if (this.maxReferrals != that.maxReferrals)
        return false;
    }

    boolean this_present_referralCount = true && this.isSetReferralCount();
    boolean that_present_referralCount = true && that.isSetReferralCount();
    if (this_present_referralCount || that_present_referralCount) {
      if (!(this_present_referralCount && that_present_referralCount))
        return false;
      if (this.referralCount != that.referralCount)
        return false;
    }

    boolean this_present_refererCode = true && this.isSetRefererCode();
    boolean that_present_refererCode = true && that.isSetRefererCode();
    if (this_present_refererCode || that_present_refererCode) {
      if (!(this_present_refererCode && that_present_refererCode))
        return false;
      if (!this.refererCode.equals(that.refererCode))
        return false;
    }

    boolean this_present_sentEmailDate = true && this.isSetSentEmailDate();
    boolean that_present_sentEmailDate = true && that.isSetSentEmailDate();
    if (this_present_sentEmailDate || that_present_sentEmailDate) {
      if (!(this_present_sentEmailDate && that_present_sentEmailDate))
        return false;
      if (this.sentEmailDate != that.sentEmailDate)
        return false;
    }

    boolean this_present_sentEmailCount = true && this.isSetSentEmailCount();
    boolean that_present_sentEmailCount = true && that.isSetSentEmailCount();
    if (this_present_sentEmailCount || that_present_sentEmailCount) {
      if (!(this_present_sentEmailCount && that_present_sentEmailCount))
        return false;
      if (this.sentEmailCount != that.sentEmailCount)
        return false;
    }

    boolean this_present_dailyEmailLimit = true && this.isSetDailyEmailLimit();
    boolean that_present_dailyEmailLimit = true && that.isSetDailyEmailLimit();
    if (this_present_dailyEmailLimit || that_present_dailyEmailLimit) {
      if (!(this_present_dailyEmailLimit && that_present_dailyEmailLimit))
        return false;
      if (this.dailyEmailLimit != that.dailyEmailLimit)
        return false;
    }

    boolean this_present_emailOptOutDate = true && this.isSetEmailOptOutDate();
    boolean that_present_emailOptOutDate = true && that.isSetEmailOptOutDate();
    if (this_present_emailOptOutDate || that_present_emailOptOutDate) {
      if (!(this_present_emailOptOutDate && that_present_emailOptOutDate))
        return false;
      if (this.emailOptOutDate != that.emailOptOutDate)
        return false;
    }

    boolean this_present_partnerEmailOptInDate = true && this.isSetPartnerEmailOptInDate();
    boolean that_present_partnerEmailOptInDate = true && that.isSetPartnerEmailOptInDate();
    if (this_present_partnerEmailOptInDate || that_present_partnerEmailOptInDate) {
      if (!(this_present_partnerEmailOptInDate && that_present_partnerEmailOptInDate))
        return false;
      if (this.partnerEmailOptInDate != that.partnerEmailOptInDate)
        return false;
    }

    boolean this_present_preferredLanguage = true && this.isSetPreferredLanguage();
    boolean that_present_preferredLanguage = true && that.isSetPreferredLanguage();
    if (this_present_preferredLanguage || that_present_preferredLanguage) {
      if (!(this_present_preferredLanguage && that_present_preferredLanguage))
        return false;
      if (!this.preferredLanguage.equals(that.preferredLanguage))
        return false;
    }

    boolean this_present_preferredCountry = true && this.isSetPreferredCountry();
    boolean that_present_preferredCountry = true && that.isSetPreferredCountry();
    if (this_present_preferredCountry || that_present_preferredCountry) {
      if (!(this_present_preferredCountry && that_present_preferredCountry))
        return false;
      if (!this.preferredCountry.equals(that.preferredCountry))
        return false;
    }

    boolean this_present_clipFullPage = true && this.isSetClipFullPage();
    boolean that_present_clipFullPage = true && that.isSetClipFullPage();
    if (this_present_clipFullPage || that_present_clipFullPage) {
      if (!(this_present_clipFullPage && that_present_clipFullPage))
        return false;
      if (this.clipFullPage != that.clipFullPage)
        return false;
    }

    boolean this_present_twitterUserName = true && this.isSetTwitterUserName();
    boolean that_present_twitterUserName = true && that.isSetTwitterUserName();
    if (this_present_twitterUserName || that_present_twitterUserName) {
      if (!(this_present_twitterUserName && that_present_twitterUserName))
        return false;
      if (!this.twitterUserName.equals(that.twitterUserName))
        return false;
    }

    boolean this_present_twitterId = true && this.isSetTwitterId();
    boolean that_present_twitterId = true && that.isSetTwitterId();
    if (this_present_twitterId || that_present_twitterId) {
      if (!(this_present_twitterId && that_present_twitterId))
        return false;
      if (!this.twitterId.equals(that.twitterId))
        return false;
    }

    boolean this_present_groupName = true && this.isSetGroupName();
    boolean that_present_groupName = true && that.isSetGroupName();
    if (this_present_groupName || that_present_groupName) {
      if (!(this_present_groupName && that_present_groupName))
        return false;
      if (!this.groupName.equals(that.groupName))
        return false;
    }

    boolean this_present_recognitionLanguage = true && this.isSetRecognitionLanguage();
    boolean that_present_recognitionLanguage = true && that.isSetRecognitionLanguage();
    if (this_present_recognitionLanguage || that_present_recognitionLanguage) {
      if (!(this_present_recognitionLanguage && that_present_recognitionLanguage))
        return false;
      if (!this.recognitionLanguage.equals(that.recognitionLanguage))
        return false;
    }

    boolean this_present_referralProof = true && this.isSetReferralProof();
    boolean that_present_referralProof = true && that.isSetReferralProof();
    if (this_present_referralProof || that_present_referralProof) {
      if (!(this_present_referralProof && that_present_referralProof))
        return false;
      if (!this.referralProof.equals(that.referralProof))
        return false;
    }

    boolean this_present_educationalDiscount = true && this.isSetEducationalDiscount();
    boolean that_present_educationalDiscount = true && that.isSetEducationalDiscount();
    if (this_present_educationalDiscount || that_present_educationalDiscount) {
      if (!(this_present_educationalDiscount && that_present_educationalDiscount))
        return false;
      if (this.educationalDiscount != that.educationalDiscount)
        return false;
    }

    boolean this_present_businessAddress = true && this.isSetBusinessAddress();
    boolean that_present_businessAddress = true && that.isSetBusinessAddress();
    if (this_present_businessAddress || that_present_businessAddress) {
      if (!(this_present_businessAddress && that_present_businessAddress))
        return false;
      if (!this.businessAddress.equals(that.businessAddress))
        return false;
    }

    boolean this_present_hideSponsorBilling = true && this.isSetHideSponsorBilling();
    boolean that_present_hideSponsorBilling = true && that.isSetHideSponsorBilling();
    if (this_present_hideSponsorBilling || that_present_hideSponsorBilling) {
      if (!(this_present_hideSponsorBilling && that_present_hideSponsorBilling))
        return false;
      if (this.hideSponsorBilling != that.hideSponsorBilling)
        return false;
    }

    boolean this_present_taxExempt = true && this.isSetTaxExempt();
    boolean that_present_taxExempt = true && that.isSetTaxExempt();
    if (this_present_taxExempt || that_present_taxExempt) {
      if (!(this_present_taxExempt && that_present_taxExempt))
        return false;
      if (this.taxExempt != that.taxExempt)
        return false;
    }

    boolean this_present_useEmailAutoFiling = true && this.isSetUseEmailAutoFiling();
    boolean that_present_useEmailAutoFiling = true && that.isSetUseEmailAutoFiling();
    if (this_present_useEmailAutoFiling || that_present_useEmailAutoFiling) {
      if (!(this_present_useEmailAutoFiling && that_present_useEmailAutoFiling))
        return false;
      if (this.useEmailAutoFiling != that.useEmailAutoFiling)
        return false;
    }

    boolean this_present_reminderEmailConfig = true && this.isSetReminderEmailConfig();
    boolean that_present_reminderEmailConfig = true && that.isSetReminderEmailConfig();
    if (this_present_reminderEmailConfig || that_present_reminderEmailConfig) {
      if (!(this_present_reminderEmailConfig && that_present_reminderEmailConfig))
        return false;
      if (!this.reminderEmailConfig.equals(that.reminderEmailConfig))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(UserAttributes other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    UserAttributes typedOther = (UserAttributes)other;

    lastComparison = Boolean.valueOf(isSetDefaultLocationName()).compareTo(typedOther.isSetDefaultLocationName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDefaultLocationName()) {      lastComparison = TBaseHelper.compareTo(this.defaultLocationName, typedOther.defaultLocationName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDefaultLatitude()).compareTo(typedOther.isSetDefaultLatitude());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDefaultLatitude()) {      lastComparison = TBaseHelper.compareTo(this.defaultLatitude, typedOther.defaultLatitude);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDefaultLongitude()).compareTo(typedOther.isSetDefaultLongitude());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDefaultLongitude()) {      lastComparison = TBaseHelper.compareTo(this.defaultLongitude, typedOther.defaultLongitude);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPreactivation()).compareTo(typedOther.isSetPreactivation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPreactivation()) {      lastComparison = TBaseHelper.compareTo(this.preactivation, typedOther.preactivation);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetViewedPromotions()).compareTo(typedOther.isSetViewedPromotions());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetViewedPromotions()) {      lastComparison = TBaseHelper.compareTo(this.viewedPromotions, typedOther.viewedPromotions);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIncomingEmailAddress()).compareTo(typedOther.isSetIncomingEmailAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIncomingEmailAddress()) {      lastComparison = TBaseHelper.compareTo(this.incomingEmailAddress, typedOther.incomingEmailAddress);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRecentMailedAddresses()).compareTo(typedOther.isSetRecentMailedAddresses());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecentMailedAddresses()) {      lastComparison = TBaseHelper.compareTo(this.recentMailedAddresses, typedOther.recentMailedAddresses);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetComments()).compareTo(typedOther.isSetComments());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetComments()) {      lastComparison = TBaseHelper.compareTo(this.comments, typedOther.comments);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDateAgreedToTermsOfService()).compareTo(typedOther.isSetDateAgreedToTermsOfService());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDateAgreedToTermsOfService()) {      lastComparison = TBaseHelper.compareTo(this.dateAgreedToTermsOfService, typedOther.dateAgreedToTermsOfService);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMaxReferrals()).compareTo(typedOther.isSetMaxReferrals());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMaxReferrals()) {      lastComparison = TBaseHelper.compareTo(this.maxReferrals, typedOther.maxReferrals);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetReferralCount()).compareTo(typedOther.isSetReferralCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReferralCount()) {      lastComparison = TBaseHelper.compareTo(this.referralCount, typedOther.referralCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRefererCode()).compareTo(typedOther.isSetRefererCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRefererCode()) {      lastComparison = TBaseHelper.compareTo(this.refererCode, typedOther.refererCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSentEmailDate()).compareTo(typedOther.isSetSentEmailDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSentEmailDate()) {      lastComparison = TBaseHelper.compareTo(this.sentEmailDate, typedOther.sentEmailDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSentEmailCount()).compareTo(typedOther.isSetSentEmailCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSentEmailCount()) {      lastComparison = TBaseHelper.compareTo(this.sentEmailCount, typedOther.sentEmailCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDailyEmailLimit()).compareTo(typedOther.isSetDailyEmailLimit());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDailyEmailLimit()) {      lastComparison = TBaseHelper.compareTo(this.dailyEmailLimit, typedOther.dailyEmailLimit);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmailOptOutDate()).compareTo(typedOther.isSetEmailOptOutDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmailOptOutDate()) {      lastComparison = TBaseHelper.compareTo(this.emailOptOutDate, typedOther.emailOptOutDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPartnerEmailOptInDate()).compareTo(typedOther.isSetPartnerEmailOptInDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPartnerEmailOptInDate()) {      lastComparison = TBaseHelper.compareTo(this.partnerEmailOptInDate, typedOther.partnerEmailOptInDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPreferredLanguage()).compareTo(typedOther.isSetPreferredLanguage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPreferredLanguage()) {      lastComparison = TBaseHelper.compareTo(this.preferredLanguage, typedOther.preferredLanguage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPreferredCountry()).compareTo(typedOther.isSetPreferredCountry());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPreferredCountry()) {      lastComparison = TBaseHelper.compareTo(this.preferredCountry, typedOther.preferredCountry);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClipFullPage()).compareTo(typedOther.isSetClipFullPage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClipFullPage()) {      lastComparison = TBaseHelper.compareTo(this.clipFullPage, typedOther.clipFullPage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTwitterUserName()).compareTo(typedOther.isSetTwitterUserName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTwitterUserName()) {      lastComparison = TBaseHelper.compareTo(this.twitterUserName, typedOther.twitterUserName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTwitterId()).compareTo(typedOther.isSetTwitterId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTwitterId()) {      lastComparison = TBaseHelper.compareTo(this.twitterId, typedOther.twitterId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGroupName()).compareTo(typedOther.isSetGroupName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGroupName()) {      lastComparison = TBaseHelper.compareTo(this.groupName, typedOther.groupName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRecognitionLanguage()).compareTo(typedOther.isSetRecognitionLanguage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecognitionLanguage()) {      lastComparison = TBaseHelper.compareTo(this.recognitionLanguage, typedOther.recognitionLanguage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetReferralProof()).compareTo(typedOther.isSetReferralProof());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReferralProof()) {      lastComparison = TBaseHelper.compareTo(this.referralProof, typedOther.referralProof);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEducationalDiscount()).compareTo(typedOther.isSetEducationalDiscount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEducationalDiscount()) {      lastComparison = TBaseHelper.compareTo(this.educationalDiscount, typedOther.educationalDiscount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBusinessAddress()).compareTo(typedOther.isSetBusinessAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBusinessAddress()) {      lastComparison = TBaseHelper.compareTo(this.businessAddress, typedOther.businessAddress);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHideSponsorBilling()).compareTo(typedOther.isSetHideSponsorBilling());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHideSponsorBilling()) {      lastComparison = TBaseHelper.compareTo(this.hideSponsorBilling, typedOther.hideSponsorBilling);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTaxExempt()).compareTo(typedOther.isSetTaxExempt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTaxExempt()) {      lastComparison = TBaseHelper.compareTo(this.taxExempt, typedOther.taxExempt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUseEmailAutoFiling()).compareTo(typedOther.isSetUseEmailAutoFiling());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUseEmailAutoFiling()) {      lastComparison = TBaseHelper.compareTo(this.useEmailAutoFiling, typedOther.useEmailAutoFiling);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetReminderEmailConfig()).compareTo(typedOther.isSetReminderEmailConfig());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReminderEmailConfig()) {      lastComparison = TBaseHelper.compareTo(this.reminderEmailConfig, typedOther.reminderEmailConfig);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // DEFAULT_LOCATION_NAME
          if (field.type == TType.STRING) {
            this.defaultLocationName = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // DEFAULT_LATITUDE
          if (field.type == TType.DOUBLE) {
            this.defaultLatitude = iprot.readDouble();
            setDefaultLatitudeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // DEFAULT_LONGITUDE
          if (field.type == TType.DOUBLE) {
            this.defaultLongitude = iprot.readDouble();
            setDefaultLongitudeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 4: // PREACTIVATION
          if (field.type == TType.BOOL) {
            this.preactivation = iprot.readBool();
            setPreactivationIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 5: // VIEWED_PROMOTIONS
          if (field.type == TType.LIST) {
            {
              TList _list0 = iprot.readListBegin();
              this.viewedPromotions = new ArrayList<String>(_list0.size);
              for (int _i1 = 0; _i1 < _list0.size; ++_i1)
              {
                String _elem2;
                _elem2 = iprot.readString();
                this.viewedPromotions.add(_elem2);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 6: // INCOMING_EMAIL_ADDRESS
          if (field.type == TType.STRING) {
            this.incomingEmailAddress = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 7: // RECENT_MAILED_ADDRESSES
          if (field.type == TType.LIST) {
            {
              TList _list3 = iprot.readListBegin();
              this.recentMailedAddresses = new ArrayList<String>(_list3.size);
              for (int _i4 = 0; _i4 < _list3.size; ++_i4)
              {
                String _elem5;
                _elem5 = iprot.readString();
                this.recentMailedAddresses.add(_elem5);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 9: // COMMENTS
          if (field.type == TType.STRING) {
            this.comments = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 11: // DATE_AGREED_TO_TERMS_OF_SERVICE
          if (field.type == TType.I64) {
            this.dateAgreedToTermsOfService = iprot.readI64();
            setDateAgreedToTermsOfServiceIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 12: // MAX_REFERRALS
          if (field.type == TType.I32) {
            this.maxReferrals = iprot.readI32();
            setMaxReferralsIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 13: // REFERRAL_COUNT
          if (field.type == TType.I32) {
            this.referralCount = iprot.readI32();
            setReferralCountIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 14: // REFERER_CODE
          if (field.type == TType.STRING) {
            this.refererCode = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 15: // SENT_EMAIL_DATE
          if (field.type == TType.I64) {
            this.sentEmailDate = iprot.readI64();
            setSentEmailDateIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 16: // SENT_EMAIL_COUNT
          if (field.type == TType.I32) {
            this.sentEmailCount = iprot.readI32();
            setSentEmailCountIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 17: // DAILY_EMAIL_LIMIT
          if (field.type == TType.I32) {
            this.dailyEmailLimit = iprot.readI32();
            setDailyEmailLimitIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 18: // EMAIL_OPT_OUT_DATE
          if (field.type == TType.I64) {
            this.emailOptOutDate = iprot.readI64();
            setEmailOptOutDateIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 19: // PARTNER_EMAIL_OPT_IN_DATE
          if (field.type == TType.I64) {
            this.partnerEmailOptInDate = iprot.readI64();
            setPartnerEmailOptInDateIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 20: // PREFERRED_LANGUAGE
          if (field.type == TType.STRING) {
            this.preferredLanguage = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 21: // PREFERRED_COUNTRY
          if (field.type == TType.STRING) {
            this.preferredCountry = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 22: // CLIP_FULL_PAGE
          if (field.type == TType.BOOL) {
            this.clipFullPage = iprot.readBool();
            setClipFullPageIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 23: // TWITTER_USER_NAME
          if (field.type == TType.STRING) {
            this.twitterUserName = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 24: // TWITTER_ID
          if (field.type == TType.STRING) {
            this.twitterId = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 25: // GROUP_NAME
          if (field.type == TType.STRING) {
            this.groupName = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 26: // RECOGNITION_LANGUAGE
          if (field.type == TType.STRING) {
            this.recognitionLanguage = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 28: // REFERRAL_PROOF
          if (field.type == TType.STRING) {
            this.referralProof = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 29: // EDUCATIONAL_DISCOUNT
          if (field.type == TType.BOOL) {
            this.educationalDiscount = iprot.readBool();
            setEducationalDiscountIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 30: // BUSINESS_ADDRESS
          if (field.type == TType.STRING) {
            this.businessAddress = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 31: // HIDE_SPONSOR_BILLING
          if (field.type == TType.BOOL) {
            this.hideSponsorBilling = iprot.readBool();
            setHideSponsorBillingIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 32: // TAX_EXEMPT
          if (field.type == TType.BOOL) {
            this.taxExempt = iprot.readBool();
            setTaxExemptIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 33: // USE_EMAIL_AUTO_FILING
          if (field.type == TType.BOOL) {
            this.useEmailAutoFiling = iprot.readBool();
            setUseEmailAutoFilingIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 34: // REMINDER_EMAIL_CONFIG
          if (field.type == TType.I32) {
            this.reminderEmailConfig = ReminderEmailConfig.findByValue(iprot.readI32());
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    if (this.defaultLocationName != null) {
      if (isSetDefaultLocationName()) {
        oprot.writeFieldBegin(DEFAULT_LOCATION_NAME_FIELD_DESC);
        oprot.writeString(this.defaultLocationName);
        oprot.writeFieldEnd();
      }
    }
    if (isSetDefaultLatitude()) {
      oprot.writeFieldBegin(DEFAULT_LATITUDE_FIELD_DESC);
      oprot.writeDouble(this.defaultLatitude);
      oprot.writeFieldEnd();
    }
    if (isSetDefaultLongitude()) {
      oprot.writeFieldBegin(DEFAULT_LONGITUDE_FIELD_DESC);
      oprot.writeDouble(this.defaultLongitude);
      oprot.writeFieldEnd();
    }
    if (isSetPreactivation()) {
      oprot.writeFieldBegin(PREACTIVATION_FIELD_DESC);
      oprot.writeBool(this.preactivation);
      oprot.writeFieldEnd();
    }
    if (this.viewedPromotions != null) {
      if (isSetViewedPromotions()) {
        oprot.writeFieldBegin(VIEWED_PROMOTIONS_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRING, this.viewedPromotions.size()));
          for (String _iter6 : this.viewedPromotions)
          {
            oprot.writeString(_iter6);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    if (this.incomingEmailAddress != null) {
      if (isSetIncomingEmailAddress()) {
        oprot.writeFieldBegin(INCOMING_EMAIL_ADDRESS_FIELD_DESC);
        oprot.writeString(this.incomingEmailAddress);
        oprot.writeFieldEnd();
      }
    }
    if (this.recentMailedAddresses != null) {
      if (isSetRecentMailedAddresses()) {
        oprot.writeFieldBegin(RECENT_MAILED_ADDRESSES_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRING, this.recentMailedAddresses.size()));
          for (String _iter7 : this.recentMailedAddresses)
          {
            oprot.writeString(_iter7);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    if (this.comments != null) {
      if (isSetComments()) {
        oprot.writeFieldBegin(COMMENTS_FIELD_DESC);
        oprot.writeString(this.comments);
        oprot.writeFieldEnd();
      }
    }
    if (isSetDateAgreedToTermsOfService()) {
      oprot.writeFieldBegin(DATE_AGREED_TO_TERMS_OF_SERVICE_FIELD_DESC);
      oprot.writeI64(this.dateAgreedToTermsOfService);
      oprot.writeFieldEnd();
    }
    if (isSetMaxReferrals()) {
      oprot.writeFieldBegin(MAX_REFERRALS_FIELD_DESC);
      oprot.writeI32(this.maxReferrals);
      oprot.writeFieldEnd();
    }
    if (isSetReferralCount()) {
      oprot.writeFieldBegin(REFERRAL_COUNT_FIELD_DESC);
      oprot.writeI32(this.referralCount);
      oprot.writeFieldEnd();
    }
    if (this.refererCode != null) {
      if (isSetRefererCode()) {
        oprot.writeFieldBegin(REFERER_CODE_FIELD_DESC);
        oprot.writeString(this.refererCode);
        oprot.writeFieldEnd();
      }
    }
    if (isSetSentEmailDate()) {
      oprot.writeFieldBegin(SENT_EMAIL_DATE_FIELD_DESC);
      oprot.writeI64(this.sentEmailDate);
      oprot.writeFieldEnd();
    }
    if (isSetSentEmailCount()) {
      oprot.writeFieldBegin(SENT_EMAIL_COUNT_FIELD_DESC);
      oprot.writeI32(this.sentEmailCount);
      oprot.writeFieldEnd();
    }
    if (isSetDailyEmailLimit()) {
      oprot.writeFieldBegin(DAILY_EMAIL_LIMIT_FIELD_DESC);
      oprot.writeI32(this.dailyEmailLimit);
      oprot.writeFieldEnd();
    }
    if (isSetEmailOptOutDate()) {
      oprot.writeFieldBegin(EMAIL_OPT_OUT_DATE_FIELD_DESC);
      oprot.writeI64(this.emailOptOutDate);
      oprot.writeFieldEnd();
    }
    if (isSetPartnerEmailOptInDate()) {
      oprot.writeFieldBegin(PARTNER_EMAIL_OPT_IN_DATE_FIELD_DESC);
      oprot.writeI64(this.partnerEmailOptInDate);
      oprot.writeFieldEnd();
    }
    if (this.preferredLanguage != null) {
      if (isSetPreferredLanguage()) {
        oprot.writeFieldBegin(PREFERRED_LANGUAGE_FIELD_DESC);
        oprot.writeString(this.preferredLanguage);
        oprot.writeFieldEnd();
      }
    }
    if (this.preferredCountry != null) {
      if (isSetPreferredCountry()) {
        oprot.writeFieldBegin(PREFERRED_COUNTRY_FIELD_DESC);
        oprot.writeString(this.preferredCountry);
        oprot.writeFieldEnd();
      }
    }
    if (isSetClipFullPage()) {
      oprot.writeFieldBegin(CLIP_FULL_PAGE_FIELD_DESC);
      oprot.writeBool(this.clipFullPage);
      oprot.writeFieldEnd();
    }
    if (this.twitterUserName != null) {
      if (isSetTwitterUserName()) {
        oprot.writeFieldBegin(TWITTER_USER_NAME_FIELD_DESC);
        oprot.writeString(this.twitterUserName);
        oprot.writeFieldEnd();
      }
    }
    if (this.twitterId != null) {
      if (isSetTwitterId()) {
        oprot.writeFieldBegin(TWITTER_ID_FIELD_DESC);
        oprot.writeString(this.twitterId);
        oprot.writeFieldEnd();
      }
    }
    if (this.groupName != null) {
      if (isSetGroupName()) {
        oprot.writeFieldBegin(GROUP_NAME_FIELD_DESC);
        oprot.writeString(this.groupName);
        oprot.writeFieldEnd();
      }
    }
    if (this.recognitionLanguage != null) {
      if (isSetRecognitionLanguage()) {
        oprot.writeFieldBegin(RECOGNITION_LANGUAGE_FIELD_DESC);
        oprot.writeString(this.recognitionLanguage);
        oprot.writeFieldEnd();
      }
    }
    if (this.referralProof != null) {
      if (isSetReferralProof()) {
        oprot.writeFieldBegin(REFERRAL_PROOF_FIELD_DESC);
        oprot.writeString(this.referralProof);
        oprot.writeFieldEnd();
      }
    }
    if (isSetEducationalDiscount()) {
      oprot.writeFieldBegin(EDUCATIONAL_DISCOUNT_FIELD_DESC);
      oprot.writeBool(this.educationalDiscount);
      oprot.writeFieldEnd();
    }
    if (this.businessAddress != null) {
      if (isSetBusinessAddress()) {
        oprot.writeFieldBegin(BUSINESS_ADDRESS_FIELD_DESC);
        oprot.writeString(this.businessAddress);
        oprot.writeFieldEnd();
      }
    }
    if (isSetHideSponsorBilling()) {
      oprot.writeFieldBegin(HIDE_SPONSOR_BILLING_FIELD_DESC);
      oprot.writeBool(this.hideSponsorBilling);
      oprot.writeFieldEnd();
    }
    if (isSetTaxExempt()) {
      oprot.writeFieldBegin(TAX_EXEMPT_FIELD_DESC);
      oprot.writeBool(this.taxExempt);
      oprot.writeFieldEnd();
    }
    if (isSetUseEmailAutoFiling()) {
      oprot.writeFieldBegin(USE_EMAIL_AUTO_FILING_FIELD_DESC);
      oprot.writeBool(this.useEmailAutoFiling);
      oprot.writeFieldEnd();
    }
    if (this.reminderEmailConfig != null) {
      if (isSetReminderEmailConfig()) {
        oprot.writeFieldBegin(REMINDER_EMAIL_CONFIG_FIELD_DESC);
        oprot.writeI32(this.reminderEmailConfig.getValue());
        oprot.writeFieldEnd();
      }
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("UserAttributes(");
    boolean first = true;

    if (isSetDefaultLocationName()) {
      sb.append("defaultLocationName:");
      if (this.defaultLocationName == null) {
        sb.append("null");
      } else {
        sb.append(this.defaultLocationName);
      }
      first = false;
    }
    if (isSetDefaultLatitude()) {
      if (!first) sb.append(", ");
      sb.append("defaultLatitude:");
      sb.append(this.defaultLatitude);
      first = false;
    }
    if (isSetDefaultLongitude()) {
      if (!first) sb.append(", ");
      sb.append("defaultLongitude:");
      sb.append(this.defaultLongitude);
      first = false;
    }
    if (isSetPreactivation()) {
      if (!first) sb.append(", ");
      sb.append("preactivation:");
      sb.append(this.preactivation);
      first = false;
    }
    if (isSetViewedPromotions()) {
      if (!first) sb.append(", ");
      sb.append("viewedPromotions:");
      if (this.viewedPromotions == null) {
        sb.append("null");
      } else {
        sb.append(this.viewedPromotions);
      }
      first = false;
    }
    if (isSetIncomingEmailAddress()) {
      if (!first) sb.append(", ");
      sb.append("incomingEmailAddress:");
      if (this.incomingEmailAddress == null) {
        sb.append("null");
      } else {
        sb.append(this.incomingEmailAddress);
      }
      first = false;
    }
    if (isSetRecentMailedAddresses()) {
      if (!first) sb.append(", ");
      sb.append("recentMailedAddresses:");
      if (this.recentMailedAddresses == null) {
        sb.append("null");
      } else {
        sb.append(this.recentMailedAddresses);
      }
      first = false;
    }
    if (isSetComments()) {
      if (!first) sb.append(", ");
      sb.append("comments:");
      if (this.comments == null) {
        sb.append("null");
      } else {
        sb.append(this.comments);
      }
      first = false;
    }
    if (isSetDateAgreedToTermsOfService()) {
      if (!first) sb.append(", ");
      sb.append("dateAgreedToTermsOfService:");
      sb.append(this.dateAgreedToTermsOfService);
      first = false;
    }
    if (isSetMaxReferrals()) {
      if (!first) sb.append(", ");
      sb.append("maxReferrals:");
      sb.append(this.maxReferrals);
      first = false;
    }
    if (isSetReferralCount()) {
      if (!first) sb.append(", ");
      sb.append("referralCount:");
      sb.append(this.referralCount);
      first = false;
    }
    if (isSetRefererCode()) {
      if (!first) sb.append(", ");
      sb.append("refererCode:");
      if (this.refererCode == null) {
        sb.append("null");
      } else {
        sb.append(this.refererCode);
      }
      first = false;
    }
    if (isSetSentEmailDate()) {
      if (!first) sb.append(", ");
      sb.append("sentEmailDate:");
      sb.append(this.sentEmailDate);
      first = false;
    }
    if (isSetSentEmailCount()) {
      if (!first) sb.append(", ");
      sb.append("sentEmailCount:");
      sb.append(this.sentEmailCount);
      first = false;
    }
    if (isSetDailyEmailLimit()) {
      if (!first) sb.append(", ");
      sb.append("dailyEmailLimit:");
      sb.append(this.dailyEmailLimit);
      first = false;
    }
    if (isSetEmailOptOutDate()) {
      if (!first) sb.append(", ");
      sb.append("emailOptOutDate:");
      sb.append(this.emailOptOutDate);
      first = false;
    }
    if (isSetPartnerEmailOptInDate()) {
      if (!first) sb.append(", ");
      sb.append("partnerEmailOptInDate:");
      sb.append(this.partnerEmailOptInDate);
      first = false;
    }
    if (isSetPreferredLanguage()) {
      if (!first) sb.append(", ");
      sb.append("preferredLanguage:");
      if (this.preferredLanguage == null) {
        sb.append("null");
      } else {
        sb.append(this.preferredLanguage);
      }
      first = false;
    }
    if (isSetPreferredCountry()) {
      if (!first) sb.append(", ");
      sb.append("preferredCountry:");
      if (this.preferredCountry == null) {
        sb.append("null");
      } else {
        sb.append(this.preferredCountry);
      }
      first = false;
    }
    if (isSetClipFullPage()) {
      if (!first) sb.append(", ");
      sb.append("clipFullPage:");
      sb.append(this.clipFullPage);
      first = false;
    }
    if (isSetTwitterUserName()) {
      if (!first) sb.append(", ");
      sb.append("twitterUserName:");
      if (this.twitterUserName == null) {
        sb.append("null");
      } else {
        sb.append(this.twitterUserName);
      }
      first = false;
    }
    if (isSetTwitterId()) {
      if (!first) sb.append(", ");
      sb.append("twitterId:");
      if (this.twitterId == null) {
        sb.append("null");
      } else {
        sb.append(this.twitterId);
      }
      first = false;
    }
    if (isSetGroupName()) {
      if (!first) sb.append(", ");
      sb.append("groupName:");
      if (this.groupName == null) {
        sb.append("null");
      } else {
        sb.append(this.groupName);
      }
      first = false;
    }
    if (isSetRecognitionLanguage()) {
      if (!first) sb.append(", ");
      sb.append("recognitionLanguage:");
      if (this.recognitionLanguage == null) {
        sb.append("null");
      } else {
        sb.append(this.recognitionLanguage);
      }
      first = false;
    }
    if (isSetReferralProof()) {
      if (!first) sb.append(", ");
      sb.append("referralProof:");
      if (this.referralProof == null) {
        sb.append("null");
      } else {
        sb.append(this.referralProof);
      }
      first = false;
    }
    if (isSetEducationalDiscount()) {
      if (!first) sb.append(", ");
      sb.append("educationalDiscount:");
      sb.append(this.educationalDiscount);
      first = false;
    }
    if (isSetBusinessAddress()) {
      if (!first) sb.append(", ");
      sb.append("businessAddress:");
      if (this.businessAddress == null) {
        sb.append("null");
      } else {
        sb.append(this.businessAddress);
      }
      first = false;
    }
    if (isSetHideSponsorBilling()) {
      if (!first) sb.append(", ");
      sb.append("hideSponsorBilling:");
      sb.append(this.hideSponsorBilling);
      first = false;
    }
    if (isSetTaxExempt()) {
      if (!first) sb.append(", ");
      sb.append("taxExempt:");
      sb.append(this.taxExempt);
      first = false;
    }
    if (isSetUseEmailAutoFiling()) {
      if (!first) sb.append(", ");
      sb.append("useEmailAutoFiling:");
      sb.append(this.useEmailAutoFiling);
      first = false;
    }
    if (isSetReminderEmailConfig()) {
      if (!first) sb.append(", ");
      sb.append("reminderEmailConfig:");
      if (this.reminderEmailConfig == null) {
        sb.append("null");
      } else {
        sb.append(this.reminderEmailConfig);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }

}

