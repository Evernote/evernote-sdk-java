/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.evernote.edam.error;


import java.util.Map;
import java.util.HashMap;
import com.evernote.thrift.TEnum;

/**
 * Numeric codes indicating the type of error that occurred on the
 * service.
 * <dl>
 *   <dt>UNKNOWN</dt>
 *     <dd>No information available about the error</dd>
 *   <dt>BAD_DATA_FORMAT</dt>
 *     <dd>The format of the request data was incorrect</dd>
 *   <dt>PERMISSION_DENIED</dt>
 *     <dd>Not permitted to perform action</dd>
 *   <dt>INTERNAL_ERROR</dt>
 *     <dd>Unexpected problem with the service</dd>
 *   <dt>DATA_REQUIRED</dt>
 *     <dd>A required parameter/field was absent</dd>
 *   <dt>LIMIT_REACHED</dt>
 *     <dd>Operation denied due to data model limit</dd>
 *   <dt>QUOTA_REACHED</dt>
 *     <dd>Operation denied due to user storage limit</dd>
 *   <dt>INVALID_AUTH</dt>
 *     <dd>Username and/or password incorrect</dd>
 *   <dt>AUTH_EXPIRED</dt>
 *     <dd>Authentication token expired</dd>
 *   <dt>DATA_CONFLICT</dt>
 *     <dd>Change denied due to data model conflict</dd>
 *   <dt>ENML_VALIDATION</dt>
 *     <dd>Content of submitted note was malformed</dd>
 *   <dt>SHARD_UNAVAILABLE</dt>
 *     <dd>Service shard with account data is temporarily down</dd>
 *   <dt>LEN_TOO_SHORT</dt>
 *     <dd>Operation denied due to data model limit, where something such
 *         as a string length was too short</dd>
 *   <dt>LEN_TOO_LONG</dt>
 *     <dd>Operation denied due to data model limit, where something such
 *         as a string length was too long</dd>
 *   <dt>TOO_FEW</dt>
 *     <dd>Operation denied due to data model limit, where there were
 *         too few of something.</dd>
 *   <dt>TOO_MANY</dt>
 *     <dd>Operation denied due to data model limit, where there were
 *         too many of something.</dd>
 *   <dt>UNSUPPORTED_OPERATION</dt>
 *     <dd>Operation denied because it is currently unsupported.</dd>
 *   <dt>TAKEN_DOWN</dt>
 *     <dd>Operation denied because access to the corresponding object is
 *         prohibited in response to a take-down notice.</dd>
 *   <dt>RATE_LIMIT_REACHED</dt>
 *     <dd>Operation denied because the calling application has reached
 *         its hourly API call limit for this user.</dd>
 * </dl>
 */
public enum EDAMErrorCode implements TEnum {
  UNKNOWN(1),
  BAD_DATA_FORMAT(2),
  PERMISSION_DENIED(3),
  INTERNAL_ERROR(4),
  DATA_REQUIRED(5),
  LIMIT_REACHED(6),
  QUOTA_REACHED(7),
  INVALID_AUTH(8),
  AUTH_EXPIRED(9),
  DATA_CONFLICT(10),
  ENML_VALIDATION(11),
  SHARD_UNAVAILABLE(12),
  LEN_TOO_SHORT(13),
  LEN_TOO_LONG(14),
  TOO_FEW(15),
  TOO_MANY(16),
  UNSUPPORTED_OPERATION(17),
  TAKEN_DOWN(18),
  RATE_LIMIT_REACHED(19);

  private final int value;

  private EDAMErrorCode(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static EDAMErrorCode findByValue(int value) { 
    switch (value) {
      case 1:
        return UNKNOWN;
      case 2:
        return BAD_DATA_FORMAT;
      case 3:
        return PERMISSION_DENIED;
      case 4:
        return INTERNAL_ERROR;
      case 5:
        return DATA_REQUIRED;
      case 6:
        return LIMIT_REACHED;
      case 7:
        return QUOTA_REACHED;
      case 8:
        return INVALID_AUTH;
      case 9:
        return AUTH_EXPIRED;
      case 10:
        return DATA_CONFLICT;
      case 11:
        return ENML_VALIDATION;
      case 12:
        return SHARD_UNAVAILABLE;
      case 13:
        return LEN_TOO_SHORT;
      case 14:
        return LEN_TOO_LONG;
      case 15:
        return TOO_FEW;
      case 16:
        return TOO_MANY;
      case 17:
        return UNSUPPORTED_OPERATION;
      case 18:
        return TAKEN_DOWN;
      case 19:
        return RATE_LIMIT_REACHED;
      default:
        return null;
    }
  }
}
